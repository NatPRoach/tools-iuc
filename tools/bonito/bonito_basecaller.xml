<?xml version="1.0"?>
<tool id="bonito_basecaller" name="bonito basecalling tool" version="@TOOL_VERSION@+galaxy0" profile="@PROFILE@">
    <description>Pytorch based basecalling for Oxford Nanopore Technologies data</description>
    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="version_command"/>

    <command detect_errors="exit_code"><![CDATA[
#if '$align.align_reads' == "Yes":
    #if $reference_source.reference_source_selector == 'history':
        ln -f -s '$align.reference_source.ref_file' reference.fa &&
    #else:
        ln -f -s '$align.reference_source.ref_file.fields.path' reference.fa &&
    #end if
#end if

@INITIALIZE@

## run
bonito basecaller
#if '$align.align_reads' == "Yes":
    --reference '$align_reads.reference'
    #if '$save_ctc':
        --save-ctc
        --ctc-min-coverage '$ctc_min_coverage'
        --ctc-min-accuracy '$ctc_min_accuracy'
    #end if
#end if 
./data
#if '$reads_ids':
    --reads-ids '$reads_ids'
#end if
#if '$device':
    --device '$device'
#end if
#if '$weights':
    --weights '$weights'
#end if
#if '$skip':
    --skip
#end if
#if '$output_format' == "fastq":
    --fastq
#end if
>
#if '$align_reads' == "Yes":
    '$out_sam'
#elif '$output_format' == "fastq":
    '$out_fastq'
#else:
    '$out_fasta'
#end if
    ]]></command>
    <inputs>
        <conditional name="align">
            <param name="align_reads" type="select" label="Align reads to reference? (Output will be in SAM format)">
                <option value="No" selected="True">No</option>
                <option value="Yes">Yes</option>
            </param>
            <when value="Yes">
                <expand macro="reference"/>
                <conditional name="ctc">
                    <param name="save_ctc" type="select" label="Save CTC data for custom model training?">
                        <option value="No" selected="True">No</option>
                        <option value="Yes">Yes</option>
                    </param>
                    <when value="Yes">
                        <param name="ctc_min_coverage" type="float" value="0.9"/>
                        <param name="ctc_min_accuracy" type="float" value="0.9"/>
                    </when>
                    <when value="No"/>
                </conditional>
            </when>
            <when value="No"/>
        </conditional>
        <param name="output_format" type="select">
            <option value="fasta" selected="True">FASTA</option>
            <option value="fastq">FASTQ</option>
        </param>
        <param name="reads_ids"/>
        <param name="device" type="select">
            <option value="cuda">GPU</option>
            <option value="cpu">CPU</option>
        </param>
        <param name="weights" type="integer" value="0" min="0"/>
        <param name="skip" />
    </inputs>
    <outputs>
        
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="3">
            <conditional name="pool">
                <param name="pool_mode" value="Yes"/>
                <param name="inputs" value="medaka_test.hdf,medaka_test.hdf"/>
            </conditional>
            <conditional name="reference_source">
                <param name="reference_source_selector" value="history"/>
                <param name="ref_file" value="ref.fasta"/>
            </conditional>
            <conditional name="output_annotated">
                <param name="output_annotated_select" value="true"/>
                <param name="in_bam" value="medaka_test.bam"/>
            </conditional>
            <param name="output_log_bool" value="true"/>
            
            <output name="out_result">
                <assert_contents>
                    <has_n_lines n="9"/>
                    <has_line line="##fileformat=VCFv4.1" />
                    <has_line line="##medaka_version=1.0.3" />
                </assert_contents>
            </output>
            <output name="out_annotated">
                <assert_contents>
                    <has_n_lines n="16"/>
                    <has_line line="##fileformat=VCFv4.1" />
                    <has_line line="##medaka_version=1.0.3" />
                    <has_line line="##annotateVCFVersion=0.2" />
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_n_lines n="10" />
                </assert_contents>
            </output>
        </test>
        <!--No pooling-->
        <test expect_num_outputs="3">
            <conditional name="pool">
                <param name="pool_mode" value="No"/>
                <param name="input" value="medaka_test.hdf"/>
            </conditional>
            <conditional name="reference_source">
                <param name="reference_source_selector" value="history"/>
                <param name="ref_file" value="ref.fasta"/>
            </conditional>
            <conditional name="output_annotated">
                <param name="output_annotated_select" value="true"/>
                <param name="in_bam" value="medaka_test.bam"/>
            </conditional>
            <param name="output_log_bool" value="true"/>
            
            <output name="out_result">
                <assert_contents>
                    <has_n_lines n="9"/>
                    <has_line line="##fileformat=VCFv4.1" />
                    <has_line line="##medaka_version=1.0.3" />
                </assert_contents>
            </output>
            <output name="out_annotated">
                <assert_contents>
                    <has_n_lines n="16"/>
                    <has_line line="##fileformat=VCFv4.1" />
                    <has_line line="##medaka_version=1.0.3" />
                    <has_line line="##annotateVCFVersion=0.2" />
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_n_lines n="8" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

The module *variant* decodes probabilities.

**Input**

- reference sequence (FASTA)
- (several) consensus files (H5/HDF)

**Output**

- decoded probabilities (VCF)

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>
